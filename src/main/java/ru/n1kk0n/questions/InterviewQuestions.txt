Современный стек: Java 18, Spring

JUNIOR

1. Java Core

+ 1.1 Какие есть типы данных в Java? Чем отличается объект от примитивных типов данных?

+ 1.2 В чем разница передачи параметров по ссылке и по значению? Как происходит передача параметров в Java?

+ 1.3 Расскажите о механизме работы autoboxing/autounboxing в Java.

+ 1.4 Дайте краткую характеристику immutable object. Зачем они нужны? Объекты каких стандартных классов immutable в Java?

+ 1.5 В чем особенность класса String?

+ 1.6 Что такое побитовые операции?

+ 1.7 Что такое JVM, JDK, JRE? Что такое bytecode?

+ 1.8 Что такое stacktrace? Как его получить?


2. ООП

+ 2.1 Что такое ООП? Назовите принципы с примерами.

+ 2.2 В чем преимущества/недостатки ООП?

+ 2.3 Что такое класс, объект, интерфейс? Что такое класс POJO? Что такое вложенные классы?

+ 2.4 Что такое модификаторы доступа в Java? Для чего используются? Какие модификаторы доступа могут быть у класса?

+ 2.5 Что такое конструкторы? Какие типы знаете? Можно ли в конструкторе применять return, выкинуть исключение (exception)?

+ 2.6 Что такое блок инициализации?

+ 2.7 Расскажите о наследовании в Java. Какие особенности использования ключевого слова super?

+ 2.8 Что такое перегрузка/переопределение/затенение метода? Что такое статический и динамический полиморфизм?

+ 2.9 Что означает ключевое слово static? Назовите основную особенность статических переменных и методов. Может ли статический метод быть переопределенным или перегруженным?

+ 2.10 Что такое abstract? Абстрактный класс? Абстрактный метод? Может ли метод быть статическим и абстрактным одновременно?

+ 2.11 Что означает ключевое слово final?

+ 2.12 Что такое interface? Может ли быть final interface?

+ 2.13 В чем разница между абстрактным классом и интерфейсом в Java?

+ 2.14 Что такое анонимные классы?


Class Object. Equals and HashCode

+ 3.1 Назовите все методы класса object.

+ 3.2 Какие условия выдвигаются касательно переопределения соглашения при переопределении Equals?

+ 3.3 Расскажите о контракте между Equals and HashCode в Java?

+ 3.4 Что будет, если не переопределить Equals and HashCode?

+ 3.5 Что такое коллизия в HashCode? Как с ней бороться?

+ 3.6 Что будет, если элемент, участвующий в контракте с HashCode, меняет свое значение?

+ 3.7 В чем разница применения if (obj instanceof Student) и if (getClass() == obj.getClass())?

+ 3.8 Дайте краткую характеристику метода clone(). В чем заключается особенность работы метода clone() с полями объекта типа-ссылки?


Enum

+ 4.1 Дайте краткую характеристику Enum в Java. Напишите пример Enum.

+ 4.2 Может ли Enum реализовывать (implement) интерфейс?

+ 4.3 Может ли Enum расширить (extends) класс?

+ 4.4 Можно ли создать Enum без экземпляров объектов?

+ 4.5 Можем ли мы переопределить метод toString() для Enum?

+ 4.6 Что будет, если не будем переопределять метод toString() для Enum?

+ 4.7 Можем ли мы указать конструктор внутри Enum?

+ 4.8 В чем разница между == и equals()?

+ 4.9 Что делает метод ordinal() в Enum? Как связаны методы ordinal() и compareTo() в Enum? Можно ли использовать Enum с TreeSet или TreeMap в Java?

String

+ 5.1 Дайте характеристику String в Java.

+ 5.2 Какие есть способы создания объекта String? Где он создается? Что такое строковый пул и зачем он нужен?

+ 5.3 Какие GOF-шаблоны применяются в строковом пуле?

+ 5.4 Почему массив символов лучше, чем строка для хранения пароля?

+ 5.5 Какая разница StringBuffer и StringBuilder?
 

Collections

6.1 Расскажите об итераторах и об их применении.

6.2 Какая иерархия коллекций в Java Collection Framework?

6.3 Какое внутреннее строение ArrayList?

6.4 Какое внутреннее строение LinkedList?

6.5 Какое внутреннее строение HashMap?

6.6 Чем отличается ArrayList от LinkedList?

6.7 Чем отличается ArrayList от HashSet?

6.8 Зачем в Java такое многообразие имплементации динамического массива?

6.9 Зачем в Java такое многообразие имплементации key-value storage?

6.10 Как отсортировать коллекцию элементов?

6.11 Valid parentheses (задача с LeetCode).
 

Exceptions

7.1 Дайте определение понятию exception (исключительная ситуация).

7.2 Какие знаете особенности использования оператора try ... catch?

7.3 В чем разница между error и exception?

7.4 Что такое OutOfMemoryError?

7.5 Какой есть иерархия исключений?

7.6 Что такое checked и unchecked exception?

7.7 Нужно ли проверять checked exception?

7.8 О чем говорит и как использовать ключевое слово throws?

7.9 Какие возможные способы обработки исключений вы знаете?

7.10 Напишите пример перехвата и обработки исключения в блоке try-catch метода.

7.11 Напишите пример перехвата и обработки исключения в секции throws-метода и передачи вызывающему методу.

7.12 Напишите пример перехвата и обработки исключения с использованием собственных исключений.

7.13 Какие есть правила для проверки исключений при наследовании?

7.14 Могли бы ли вы написать код, если блок finally не будет выполнен?

7.15 Напишите пример обработки нескольких исключений в одном блоке catch.

7.16 Может ли метод main выбросить throws-исключение? Если да - куда передаст?

7.17 В чем отличие между try-with-resources и try-catch-finally при работе с ресурсами. Напишите пример try with resources.


Многопоточность

8.1 Какие средства для работы с многопоточностью знаете?

8.2 Что такое процесс и поток? Чем отличается процесс от потока?

8.3 Расскажите о синхронизации между потоками. Для чего используют методы wait(), notify() - notifyAll(), join()?

8.4 Как остановить поток?

8.5 Как между потоками обмениваться данными?

8.6 В чем заключается отличие класса Thread от интерфейса Runnable?

8.7 Есть потоки Т1, Т2 и Т3. Как реализовать их последовательное выполнение?


Практические задания

9.1 Matrix Diagonal Sum (задача с LeetCode).

9.2 Move Zeroes (задача с LeetCode).

9.3 Дан List <String> names. Удалите первую букву из каждого имени и верните отсортированный список.

9.4 Перевернуть массив.

9.5 Проверить, является ли строка палиндромом.

9.6 Написать простой алгоритм сортировки (Bubble, Selection или Shuttle). Как его можно улучшить?

9.7 Напишите алгоритм (последовательность действий) составления литерала типа int и литералов типа byte. Объясните, что происходит с памятью.


MIDDLE

Общие

10.1 Чем отличается агрегация от композиции?

10.2 Что такое SOLID? Приведите примеры.

10.3 Какие паттерны GoF вы использовали на практике? Приведите примеры.

10.4 Что такое прокси-объект? Приведите примеры.

10.5 Какие нововведения анонсировано в Java 8, 11, 17?

10.6 Что такое High Cohesion и Low Coupling? Приведите примеры.


Java Core

11.1 Каким образом можно реализовать множественное наследование в Java?

11.2 Какая разница между методами final, finally и finalize()?

11.3 Можно ли использовать private или protected переменные в interface?

11.4 Что такое Classloader и для чего используется?

11.5 Что такое Run-Time Data Areas?

11.6 Что такое ковариантность типов?

11.7 Приведите примеры удачного и неудачного использования Optional.

11.8 Можно ли объявлять main method как final?

11.9 Можно ли импортировать те же самые package/class дважды? Какие последствия?

11.10 Что такое Casting? Когда можем получить исключение ClassCastException?

11.12 Почему современные фреймворки используют в основном только unchecked exceptions?

11.13 Что такое static import?

11.14 Какая связь между методами hashCode() и equals()?

11.15 Когда используют BufferedInputStream и BufferedOutputStream классы?

11.16 Какая разница между классами java.util.Collection и java.util.Collections?

11.17 Какая разница между Enumeration и Iterator?

11.18 В чем разница между итераторами fail-fast и fail-safe?

11.19 Зачем нужен модификатор transient?

11.20 Как влияют на сериализацию модификаторы static и final?

11.21 Какие особенности использования интерфейса Cloneable?

11.22 Какие особенности использования интерфейса AutoCloseable?

11.23 Что такое FunctionInterface и чем он отличается от обычного интерфейса?

11.24 Что такое Atomic types и зачем они нужны?

11.25 Что такое Happens-before? Какие особенности использования ключевого слова volatile?

11.26 Расскажите о Heap и Stack память в Java. В чем разница между ними? Где хранятся примитивы?

11.27 Чем отличается stack от heap памяти? Когда и какая область памяти резервируется? Зачем такое разделение нужно?

11.28 Какие принципы работы и области памяти Garbage Collector?

11.29 Как работает Garbage Collector? Расскажите о Reference counting и Tracing.

11.30 Как реализована сериализация в Java? Где мы можем ее увидеть?

11.31 Расскажите, в чем разница между WeakReference и SoftReference?

11.32 Что такое generics? Для чего они нужны? Какую проблему решают?

11.33 Что такое PECS и как используется? Приведите примеры.
 

Библиотеки и инструменты

12.1 Чем полезны инструменты Maven, Ant, Gradle?

12.2 Что такое Unit Tests? Чем класс JUnit.Assert отличается от ключевого слова assert?

12.3 Что такое класс Assert? Зачем и как его использовать?

12.4 Что такое и зачем нужен Spring core? Раскройте понятие Inversion of Control и Dependency Injection.

12.5 Как «под капотом» работает @Transactional?

12.6 Как «под капотом» работает Spring?

12.7 Что такое и зачем нужен Hibernate? Раскройте понятие ORM.

12.8 Что такое Hibernate? В чем разница между JPA и Hibernate?

12.9 Как «под капотом» работает Hibernate? Как бы вы написали собственный Hibernate?

12.10 Что такое и когда возникает LazyLoadingException?

12.11 Что такое каскадность? Как она используется в Hibernate?

12.12 Может ли entity-класс быть абстрактным классом?

12.13 Что такое entity manager? За что отвечает?


Многопоточность

13.1 Какие преимущества и недостатки использования многопоточности?

13.2 Расскажите о четырех способах работы со многими потоками и чем отличается wait ... notify ... notifyAll от synchronized? От Future?

13.3 Что такое и зачем нужен ThreadLocal?

13.4 В чем разница между Thread.sleep() и Thread.yield()?

13.5 Как работает Thread.join()?

13.6 Что такое deadlock?

13.7 Что такое race condition?

13.8 Для чего использовать volatile, synchronized, transient, native?

13.9 Расскажите о приоритетах потоков.

13.10 Что такое потоки-демоны и для чего их устанавливать?

13.11 Почему нежелательно использовать Thread.stop()?

13.12 Как реализовать пул потоков?


Collections

14.1 Чем отличается List от Set?

14.2 В чем разница между HashSet, LinkedHashSet и TreeSet?

14.3 Какая внутренняя структура HashMap?

14.4 Какое время поиска элемента в ArrayList, HashSet?

14.5 Как реализовать свой Stack?

14.6 Как работает метод put в HashMap? Почему нам нужно высчитывать позицию бакета? В чем преимущества такой операции?

14.7 В чем разница между HashMap и TreeMap? Когда и где их нужно использовать?

14.8 Какое внутреннее строение TreeMap? Рассказать об RBT.


Stream API

15.1 Что такое Stream в Java?

15.2 Какие основные принципы Stream API?

15.3 Какие есть методы в интерфейсе Stream?

15.4 Чем отличается метод map от flatMap?

15.5 Какой функциональный интерфейс использует метод filter?


Базы данных

16.1 В чем разница между реляционными и не реляционными базами данных?

16.2 Как хранятся соотношения one-to-one, one-to-many и many-to-many в виде таблиц?

16.3 Что такое нормализация БД? Приведите примеры из реального проекта.

16.4 Какие есть виды индексов в БД?

16.5 Назовите основные свойства транзакций.

16.6 Какие есть уровни изоляции транзакций?

16.7 Какая разница между Statement и PreparedStatement?


SENIOR

Общие

236 Когда лучше использовать наследование, а не агрегацию?

237 Расскажите о принципах работы Kubernetes.


Java Core

238 В чем разница между Java NIO и Java IO?

239 Чем отличается Lambda от анонимного класса?

240 Расскажите о Java Memory Model.

241 Какие есть типы памяти в JVM?

242 Опишите жизненный цикл Java-объекта. Каким образом объект переходит из одной области памяти Garbage Collector в другую? Что является триггером такого перехода?

243 Каким образом можно заставить JVM запустить Garbage Collector?

244 Какие существуют Garbage Collectors в JVM и зачем их столько?

245 Какие виды Garbage Collector есть в HotSpot? Как работают?

246 Что будет с Garbage Collector, если finalize() будет долго выполняться или в процессе выполнения получим исключение?

247 Чем ForkJoinPool отличается от ScheduledThreadPoolExecutor и ThreadPoolExecutor?

248 Какая разница между HashMap, WeakHashMap, Hashtable, IdentityHashMap?

249 Что такое LinkedHashMap?

250 Что такое EnumSet? Для чего использовать? Как реализовать?

251 Расскажите об особенностях сериализации в Java. Зачем serialVersionUID и InvalidClassException?

252 В чем проблема сериализации Singleton?

253 Какие бывают алгоритмы обхода деревьев и почему они разные?

254 Что такое deadlock? Какие типы существуют? Нарисуйте схематично, как может произойти.


Базы данных

255 Что такое ACID?

256 Что означает CAP-теорема?

257 Есть ли смысл отказываться от использования ORM?

258 Что такое n+1 проблема?

259 Что такое cartesian product проблема?


Библиотеки и инструменты

260 Каким образом построить monitoring в Java? Расскажите об особенностях использования Java micrometrics или DropWizard, или Prometheus frameworks.

261 Какие способы выборки данных в Hibernate вы знаете?

262 Какие изоляции транзакций существуют в Hibernate?


Spring

264 Каков жизненный цикл объектов, которые создает Spring?

265 Какие есть виды контекстов?

266 Как создать и поднять контекст с целью тестирования приложения?

267 Какие возможности Spring предоставляет для коммуникации с базой данных?

268 Какие признаки того, что класс - Java Bean? Чем POJO отличается от Java Bean?

269 Опишите механизм инъекции зависимости в Spring.

270 Почему все зависимости Spring являются Java Beans? Возможно ли использовать Spring для управления зависимостями между не Java Beans классами?

271 Чем Spring singleton отличается от prototype?

272 Есть ли смысл отказываться от использования Dependency Injection?


Многопоточность

273 Какие элементы есть в java.util.concurrent пакете?

274 Что такое optimistic и pessimistic locking?

275 Какие особенности многопоточности в Java EE и Spring?
