Современный стек: Java 15, Spring

JUNIOR

1. Java Core

+ 1.1 Какие есть типы данных в Java? Чем отличается объект от примитивных типов данных?

+ 1.2 В чем разница передачи параметров по ссылке и по значению? Как происходит передача параметров в Java?

+ 1.3 Расскажите о механизме работы autoboxing/autounboxing в Java.

+ 1.4 Дайте краткую характеристику immutable object. Зачем они нужны? Объекты каких стандартных классов immutable в Java?

+ 1.5 В чем особенность класса String?

+ 1.6 Что такое побитовые операции?

+ 1.7 Что такое JVM, JDK, JRE? Что такое bytecode?

+ 1.8 Что такое стектрейс? Как его получить?


2. ООП

+ 2.1 Что такое ООП? Назовите принципы с примерами.

+ 2.2 В чем преимущества/недостатки ООП?

+ 2.3 Что такое класс, объект, интерфейс? Что такое класс POJO? Что такое вложенные классы?

+ 2.4 Что такое модификаторы доступа в Java? Для чего используются? Какие модификаторы доступа могут быть у класса?

+ 2.5 Что такое конструкторы? Какие типы знаете? Можно ли в конструкторе применять return, выкинуть исключение (exception)?

2.6 Что такое блок инициализации?

2.7 Расскажите о наследовании в Java. Какие особенности использования ключевого слова super?

2.8 Для наследования класса public class Child extends Parent напишите порядок инициализации объекта.

2.9 Создайте в объекте-наследнике конструктор по умолчанию, если в базовом классе он не определен (но определен другой конструктор).

2.10 Что такое перегрузки (overloading)/переопределение (override) метода?

2.11 Что такое статический и динамический полиморфизм?

2.12 Назовите основную особенность статических переменных и методов. Какие основные ограничения действуют на статические переменные и методы?

2.13 Что означает ключевое слово static? Может ли статический метод быть переопределенным или перегруженным?

2.14 Можно ли использовать статические методы внутри обычных? Наоборот? Почему? 

2.21 Что такое abstract? Абстрактный класс? Абстрактный метод?

2.22 Может ли метод быть статическим и абстрактным одновременно?

2.23 Что означает ключевое слово final?

2.24 Что такое interface? Может ли быть final interface?

2.25 В чем разница между абстрактным классом и интерфейсом в Java?

2.26 Где можно инициализировать статические поля?

2.27 Что такое анонимные классы?

2.28 Что такое примитивные классы?

2.29 Что такое Nested class? Когда используется?

2.30 Что такое SOLID? Приведите примеры.
 

String

69 Дайте характеристику String в Java.

70 Какие есть способы создания объекта String? Где он создается?

71 Как сравнить две строки в Java и/или отсортировать их?

72 Предложите алгоритм преобразования строки в знак. Напишите соответствующий код.

73 Как превратить строку в массив байтов и обратно? Напишите соответствующий код.

74 Что такое строковый пул и зачем он нужен?

75 Какие GOF-шаблоны применяются в строковом пуле?

76 Как разделить строку на части? Напишите соответствующий код.

77 Почему массив символов лучше, чем строка для хранения пароля?

78 Какая разница между String, StringBuffer и StringBuilder?
 

Enum

79 Дайте краткую характеристику Enum в Java.

80 Может ли Enum реализовывать (implement) интерфейс?

81 Может ли Enum расширить (extends) класс?

82 Можно ли создать Enum без экземпляров объектов?

83 Можем ли мы переопределить метод toString() для Enum?

84 Что будет, если не будем переопределять метод toString() для Enum?

85 Можем ли мы указать конструктор внутри Enum?

86 В чем разница между == и equals()?

87 Что делает метод ordinal() в Enum?

88 Можно ли использовать Enum с TreeSet или TreeMap в Java?

89 Как связаны методы ordinal() и compareTo() в Enum?

90 Напишите пример Enum.

91 Можно ли использовать Enum в switch case?

92 Как получить все имеющиеся значения в экземпляре Enum?


Collections

93 Расскажите об итераторах и об их применении.

94 Какая иерархия коллекций в Java Collection Framework?

95 Какое внутреннее строение ArrayList?

96 Какое внутреннее строение LinkedList?

97 Какое внутреннее строение HashMap?

98 Чем отличается ArrayList от LinkedList?

99 Чем отличается ArrayList от HashSet?

100 Зачем в Java такое многообразие имплементации динамического массива?

101 Зачем в Java такое многообразие имплементации key-value storage?

102 Как отсортировать коллекцию элементов?

103 Valid parentheses (задача с LeetCode).

104 Reverse Linked List (задача с LeetCode).

105 Дано String s, найти длину максимального substring без повтора символов.

106 Дайте краткую характеристику class object в Java.

107 Определить, является ли односвязный LinkedList палиндромом.


Class Object. Equals and HashCode

1.10 Назовите все методы класса object.

108 Для чего используют Equals and HashCode в Java?

109 Расскажите о контракте между Equals and HashCode в Java?

110 Какие условия выдвигаются касательно переопределения соглашения при переопределении Equals?

111 Что будет, если не переопределить Equals and HashCode?

112 Какие значения мы получим, если у нас не перераспределены Equals and HashCode?

113 Почему симметричность выполняется, только если x.equals(y) возвращает true?

114 Что такое коллизия в HashCode? Как с ней бороться?

115 Что будет, если элемент, участвующий в контракте с HashCode, меняет свое значение?

116 Напишите методы Equals and HashCode для класса Student, который состоит из полей String name и int age.

117 В чем разница применения if (obj instanceof Student) и if (getClass() == obj.getClass())?

118 Дайте краткую характеристику метода clone().

119 В чем заключается особенность работы метода clone() с полями объекта типа-ссылки?
 

Exceptions

120 Дайте определение понятию exception (исключительная ситуация).

121 Какие знаете особенности использования оператора try ... catch?

122 В чем разница между error и exception?

1.8 Что такое OutOfMemoryError?

123 Какая разница между checked и unchecked, exception, throw, throws.

124 Какой есть иерархия исключений?

125 Что такое checked и unchecked exception?

126 Нужно ли проверять checked exception?

127 О чем говорит и как использовать ключевое слово throws?

128 Какие возможные способы обработки исключений вы знаете?

129 Напишите пример перехвата и обработки исключения в блоке try-catch метода.

130 Напишите пример перехвата и обработки исключения в секции throws-метода и передачи вызывающему методу.

131 Напишите пример перехвата и обработки исключения с использованием собственных исключений.

132 Какие есть правила для проверки исключений при наследовании?

133 Могли бы ли вы написать код, если блок finally не будет выполнен?

134 Напишите пример обработки нескольких исключений в одном блоке catch.

135 Какой оператор позволяет принудительно выбросить исключение? Напишите пример.

136 Может ли метод main выбросить throws-исключение? Если да - куда передаст?

137 В чем отличие между try-with-resources и try-catch-finally при работе с ресурсами. Напишите пример try with resources.


Многопоточность

138 Какие средства для работы с многопоточностью знаете?

139 Что такое процесс и поток? Чем отличается процесс от потока?

140 Расскажите о синхронизации между потоками. Для чего используют методы wait(), notify() - notifyAll(), join()?

141 Как остановить поток?

142 Как между потоками обмениваться данными?

143 В чем заключается отличие класса Thread от интерфейса Runnable?

144 Есть потоки Т1, Т2 и Т3. Как реализовать их последовательное выполнение?


Практические задания

145 Matrix Diagonal Sum (задача с Leetcode).

146 Move Zeroes (задача с Leetcode).

147 Дан List <String> names. Удалите первую букву из каждого имени и верните отсортированный список.

148 Перевернуть массив.

149 Проверить, является ли строка палиндромом.

150 Написать простой алгоритм сортировки (Bubble, Selection или Shuttle). Как его можно улучшить?

151 Напишите алгоритм (последовательность действий) составления литерала типа int и литералов типа byte. Объясните, что происходит с памятью.


MIDDLE

Общие

153 Чем отличается агрегация от композиции?

154 Какие паттерны GoF вы использовали на практике? Приведите примеры.

155 Что такое прокси-объект? Приведите примеры.

156 Какие нововведения анонсировано в Java 8?

157 Что такое High Cohesion и Low Coupling? Приведите примеры.


Java Core

158 Каким образом можно реализовать множественное наследование в Java?

159 Какая разница между методами final, finally и finalize()?

161 Можно ли использовать private или protected переменные в interface?

162 Что такое Classloader и для чего используется?

163 Что такое Run-Time Data Areas?

166 Что такое ковариантность типов?

168 Приведите примеры удачного и неудачного использования Optional.

169 Можно ли объявлять main method как final?

170 Можно ли импортировать те же самые package/class дважды? Какие последствия?

171 Что такое Casting? Когда можем получить исключение ClassCastException?

172 Почему современные фреймворки используют в основном только unchecked exceptions?

173 Что такое static import?

174 Какая связь между методами hashCode() и equals()?

175 Когда используют BufferedInputStream и BufferedOutputStream классы?

176 Какая разница между классами java.util.Collection и java.util.Collections?

177 Какая разница между Enumeration и Iterator?

178 В чем разница между итераторами fail-fast и fail-safe?

179 Зачем нужен модификатор transient?

180 Как влияют на сериализацию модификаторы static и final?

181 Какие особенности использования интерфейса Cloneable?

182 Какие особенности использования интерфейса AutoCloseable?

183 Что такое FunctionInterface и чем он отличается от обычного интерфейса?

184 Что такое Atomic types и зачем они нужны?

185 Что такое Happens-before? Какие особенности использования ключевого слова volatile?

186 Расскажите о Heap и Stack память в Java. В чем разница между ними? Где хранятся примитивы?

187 Чем отличается stack от heap памяти? Когда и какая область памяти резервируется? Зачем такое разделение нужно?

188 Какие принципы работы и области памяти Garbage Collector?

189 Как работает Garbage Collector? Расскажите о Reference counting и Tracing.

191 Как реализована сериализация в Java? Где мы можем ее увидеть?

192 Расскажите, в чем разница между WeakReference и SoftReference?

193 Что такое generics? Для чего они нужны? Какую проблему решают?

194 Что такое PECS и как используется? Приведите примеры.
 

Библиотеки и инструменты

196 Чем полезны инструменты Maven, Ant, Gradle?

197 Что такое Unit Tests? Чем класс JUnit.Assert отличается от ключевого слова assert?

68 Что такое класс Assert? Зачем и как его использовать?

198 Что такое и зачем нужен Spring core? Раскройте понятие Inversion of Control и Dependency Injection.

199 Как «под капотом» работает @Transactional?

200 Как «под капотом» работает Spring?

201 Что такое и зачем нужен Hibernate? Раскройте понятие ORM.

202 Что такое и когда возникает LazyLoadingException?

203 Как «под капотом» работает Hibernate? Как бы вы написали собственный Hibernate?

64 Что такое Hibernate? В чем разница между JPA i Hibernate?

65 Что такое каскадность? Как она используется в Hibernate?

66 Может ли entity-класс быть абстрактным классом?

67 Что такое entity manager? За что отвечает?





Многопоточность

204 Какие преимущества и недостатки использования многопоточности?

205 Расскажите о четырех способах работы со многими потоками и чем отличается wait ... notify ... notifyAll от synchronized? От Future?

206 Что такое и зачем нужен ThreadLocal?

207 В чем разница между Thread.sleep() и Thread.yield()?

208 Как работает Thread.join()?

209 Что такое deadlock?

210 Что такое race condition?

211 Для чего использовать volatile, synchronized, transient, native?

212 Расскажите о приоритетах потоков.

213 Что такое потоки-демоны и для чего их устанавливать?

214 Почему нежелательно использовать Thread.stop()?

215 Как реализовать пул потоков?


Collections

216 Чем отличается List от Set?

217 В чем разница между HashSet, LinkedHashSet и TreeSet?

218 Какая внутренняя структура HashMap?

219 Какое время поиска элемента в ArrayList, HashSet?

220 Как реализовать свой Stack?

221 Как работает метод put в HashMap? Почему нам нужно высчитывать позицию бакета? В чем преимущества такой операции?

222 В чем разница между HashMap и TreeMap? Когда и где их нужно использовать?

223 Какое внутреннее строение TreeMap? Рассказать об RBT.


Stream API

224 Что такое Stream в Java?

222 Какие основные принципы Stream API?

226 Какие есть методы в интерфейсе Stream?

227 Чем отличается метод map от flatMap?

228 Какой функциональный интерфейс использует метод filter?


Базы данных

229 В чем разница между реляционными и нереляционными базами данных?

230 Как хранятся соотношения one-to-one, one-to-many и many-to-many в виде таблиц?

231 Что такое нормализация БД? Приведите примеры из реального проекта.

232 Какие есть виды индексов в БД?

233 Назовите основные свойства транзакций.

234 Какие есть уровни изоляции транзакций?

235 Какая разница между Statement и PreparedStatement?


SENIOR

Общие

236 Когда лучше использовать наследование, а не агрегацию?

237 Расскажите о принципах работы Kubernetes.


Java Core

238 В чем разница между Java NIO и Java IO?

239 Чем отличается Lambda от анонимного класса?

240 Расскажите о Java Memory Model.

241 Какие есть типы памяти в JVM?

242 Опишите жизненный цикл Java-объекта. Каким образом объект переходит из одной области памяти Garbage Collector в другую? Что является триггером такого перехода?

243 Каким образом можно заставить JVM запустить Garbage Collector?

244 Какие существуют Garbage Collectors в JVM и зачем их столько?

245 Какие виды Garbage Collector есть в HotSpot? Как работают?

246 Что будет с Garbage Collector, если finalize() будет долго выполняться или в процессе выполнения получим исключение?

247 Чем ForkJoinPool отличается от ScheduledThreadPoolExecutor и ThreadPoolExecutor?

248 Какая разница между HashMap, WeakHashMap, Hashtable, IdentityHashMap?

249 Что такое LinkedHashMap?

250 Что такое EnumSet? Для чего использовать? Как реализовать?

251 Расскажите об особенностях сериализации в Java. Зачем serialVersionUID и InvalidClassException?

252 В чем проблема сериализации Singleton?

253 Какие бывают алгоритмы обхода деревьев и почему они разные?

254 Что такое deadlock? Какие типы существуют? Нарисуйте схематично, как может произойти.


Базы данных

255 Что такое ACID?

256 Что означает CAP-теорема?

257 Есть ли смысл отказываться от использования ORM?

258 Что такое n+1 проблема?

259 Что такое cartesian product проблема?


Библиотеки и инструменты

260 Каким образом построить monitoring в Java? Расскажите об особенностях использования Java micrometrics или DropWizard, или Prometheus frameworks.

261 Какие способы выборки данных в Hibernate вы знаете?

262 Какие изоляции транзакций существуют в Hibernate?


Spring

263 Что такое IoC и DI?

264 Каков жизненный цикл объектов, которые создает Spring?

265 Какие есть виды контекстов?

266 Как создать и поднять контекст с целью тестирования приложения?

267 Какие возможности Spring предоставляет для коммуникации с базой данных?

268 Какие признаки того, что класс - Java Bean? Чем POJO отличается от Java Bean?

269 Опишите механизм инъекции зависимости в Spring.

270 Почему все зависимости Spring являются Java Beans? Возможно ли использовать Spring для управления зависимостями между не Java Beans классами?

271 Чем Spring singleton отличается от prototype?

272 Есть ли смысл отказываться от использования Dependency Injection?


Многопоточность

273 Какие элементы есть в java.util.concurrent пакете?

274 Что такое optimistic и pessimistic locking?

275 Какие особенности многопоточности в Java EE и Spring?


